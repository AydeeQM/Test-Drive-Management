{"version":3,"file":"index.min.js","sources":["../src/utils/shallowEqual.ts","../src/utils/getDiff.ts","../src/utils/set.tsx","../src/utils/bindActions.ts","../src/svelte/components/connect.ts"],"sourcesContent":["export default function shallowEqual(a, b) {\n  for (const i in a) if (a[i] !== b[i]) return false\n  for (const i in b) if (!(i in a)) return false\n  return true\n}\n","import shallowEqual from \"./shallowEqual\"\r\n\r\nfunction differs(a, b) {\r\n  if (a !== b) {\r\n    return true\r\n  } else if (a && typeof a === \"object\") {\r\n    return !shallowEqual(a, b)\r\n  }\r\n  return false\r\n}\r\n\r\nexport default function getDiff(newData, oldData) {\r\n  const diff = {}\r\n  let changed = false\r\n  for (let key in newData) {\r\n    const val = newData[key]\r\n    if (differs(oldData[key], val)) {\r\n      changed = true\r\n      if (typeof val === \"object\" && typeof val.getMonth !== \"function\") {\r\n        diff[key] = val.constructor === Array ? val.slice(0) : { ...val }\r\n      } else {\r\n        diff[key] = val\r\n      }\r\n    }\r\n  }\r\n  return { diff, changed }\r\n}\r\n","export default function set(store, ret) {\n  if (ret != null) {\n    if (ret.then) return ret.then(store.setState)\n    store.setState(ret)\n  }\n}\n","import set from \"./set\"\n\nexport default function bindActions(actions, store) {\n  actions = typeof actions === \"function\" ? actions(store) : actions\n\n  let bound = {}\n  for (let name in actions) {\n    bound[name] = (...args) => {\n      const action = actions[name]\n\n      if (typeof store.middleware === \"function\") {\n        return store.middleware(store, action, args)\n      }\n\n      return set(store, action(store.getState(), ...args))\n    }\n  }\n\n  return bound\n}\n","import getDiff from \"../../utils/getDiff\"\nimport bindActions from \"../../utils/bindActions\"\n\nexport function getActions(store, actions) {\n  return bindActions(actions, store)\n}\n\nexport function connect(component, store, mapToProps) {\n  update()\n  component.on(\"destroy\", store.subscribe(update))\n  function update() {\n    const { diff, changed } = getDiff(\n      mapToProps(store.getState()),\n      component.get()\n    )\n    if (changed) {\n      component.set(diff)\n    }\n  }\n}\n"],"names":["a","b","i","shallowEqual","newData","oldData","diff","changed","key","val","differs","getMonth","constructor","Array","slice","store","ret","then","setState","actions","bound","name_1","_i","args","action","middleware","set","getState","component","mapToProps","_a","update","on","subscribe","bindActions"],"mappings":"2MAAqCA,EAAGC,GACtC,IAAK,IAAMC,KAAKF,EAAG,GAAIA,EAAEE,KAAOD,EAAEC,GAAI,OAAO,EAC7C,IAAK,IAAMA,KAAKD,EAAG,KAAMC,KAAKF,GAAI,OAAO,EACzC,OAAO,ECDT,WAAiBA,EAAGC,GAClB,OAAID,IAAMC,MAECD,GAAkB,iBAANA,KACbG,EAAaH,EAAGC,GAK5B,WAAgCG,EAASC,GACvC,IAAMC,KACFC,GAAU,EACd,IAAK,IAAIC,KAAOJ,EAAS,CACvB,IAAMK,EAAML,EAAQI,GAChBE,EAAQL,EAAQG,GAAMC,KACxBF,GAAU,EACS,iBAARE,GAA4C,mBAAjBA,EAAIE,SACxCL,EAAKE,GAAOC,EAAIG,cAAgBC,MAAQJ,EAAIK,MAAM,QAAUL,GAE5DH,EAAKE,GAAOC,GAIlB,OAASH,OAAMC,sBCzBWQ,EAAOC,GACjC,GAAW,MAAPA,EAAa,CACf,GAAIA,EAAIC,KAAM,OAAOD,EAAIC,KAAKF,EAAMG,UACpCH,EAAMG,SAASF,eCDiBG,EAASJ,GAC3CI,EAA6B,mBAAZA,EAAyBA,EAAQJ,GAASI,EAE3D,IAAIC,KACJ,IAAK,IAAIC,KAAQF,YAARE,GACPD,EAAMC,GAAQ,eAAC,aAAAC,mBAAAA,IAAAC,kBACb,IAAMC,EAASL,EAAQE,GAEvB,MAAgC,mBAArBN,EAAMU,WACRV,EAAMU,WAAWV,EAAOS,EAAQD,GAGlCG,EAAIX,EAAOS,gBAAOT,EAAMY,mBAAeJ,OARzCF,GAYT,OAAOD,sLCXT,SAAwBQ,EAAWb,EAAOc,GAGxC,aACQ,IAAAC,6BAAExB,oBAKNsB,EAAUF,IAAIpB,GARlByB,IACAH,EAAUI,GAAG,UAAWjB,EAAMkB,UAAUF,2BANfhB,EAAOI,GAChC,OAAOe,EAAYf,EAASJ"}